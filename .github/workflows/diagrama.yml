name: Generate README.md

on:
  push:
    branches:
      - DesarrolloApiBack

jobs:
  generate-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the main repository
        uses: actions/checkout@v3

      - name: Checkout the Terraform repository
        uses: actions/checkout@v3
        with:
          repository: UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-desarrollo-api-back
          path: terraform_repo  # Directorio donde se clonará el repo
          ref: develop  # Rama donde están los archivos TF

      - name: Install Terraform
        run: |
          curl -LO https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
          unzip terraform_1.0.0_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
      - name: Generate README.md
        run: |
          echo "# DIAGRAMAS " > README.md
          echo "" >> README.md
          echo "En esta rama se genera los diagramas de infraestructura del repositorio proyecto-si8811a-2024-ii-u1-desarrollo-api-back y develop la Rama donde están los archivos TF." >> README.md
          echo "" >> README.md
          echo "## Diagrama de Infraestructura" >> README.md
          echo '```mermaid' >> README.md
          echo "graph TD;" >> README.md
          
          # Inicializar variable para almacenar la lista de archivos .tf
          tf_files=""
          
          # Analizar los archivos .tf en el repositorio clonado
          for file in $(find terraform_repo -name "*.tf"); do
            echo "Analizando $file"
            tf_files="$tf_files\n- $file"
            # Modificar el grep y awk para extraer los nombres sin comillas
            grep 'resource "' $file | awk -F '"' '{print $2}' | while read resource; do
              echo "    $resource --> AWS" >> README.md
            done
          done
          
          echo '```' >> README.md
          echo "" >> README.md









          echo "# DIAGRAMAS " > README.md
          echo "" >> README.md
          echo "En esta rama se genera los diagramas de infraestructura del repositorio proyecto-si8811a-2024-ii-u1-desarrollo-api-back y develop la Rama donde están los archivos TF." >> README.md
          echo "" >> README.md
          
          echo "## Diagrama de Estructura de Archivos" >> README.md
          echo '```mermaid' >> README.md
          echo "graph TD;" >> README.md
          
          # Añadir las carpetas y archivos al diagrama
          find terraform_repo -type d | while read dir; do
            dir_name=$(basename "$dir")
            parent_dir=$(dirname "$dir" | xargs basename)
            if [ "$parent_dir" != "." ]; then
              echo "    $parent_dir --> $dir_name" >> README.md
            else
              echo "    Root --> $dir_name" >> README.md
            fi
          done

          find terraform_repo -type f -name "*.tf" | while read file; do
            file_name=$(basename "$file")
            dir_name=$(dirname "$file" | xargs basename)
            echo "    $dir_name --> $file_name" >> README.md
          done
          
          echo '```' >> README.md
          echo "" >> README.md





          
          # Añadir la lista de archivos .tf que fueron analizados
          echo "## Archivos Terraform Analizados" >> README.md
          echo -e "$tf_files" >> README.md
          
          echo "" >> README.md
          echo "## Recursos Utilizados" >> README.md
          echo "- EC2" >> README.md
          echo "- MongoDB" >> README.md
          echo "- Grafana" >> README.md
          echo "- Aplicaciones Web y Móviles" >> README.md
          echo "- API Backend" >> README.md
      - name: Commit and Push README.md
        run: |
          git config --local user.name "jesus huallpa"
          git config --local user.email "jh2021071085@virtual.upt.pe"
          git add README.md
          git commit -m "Generar README.md automáticamente" || echo "No hay cambios para commit"
          git push origin DesarrolloApiBack
