name: Generate README.md

on:
  push:
    branches:
      - DesarrolloApiBack

jobs:
  generate-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install Terraform
        run: |
          curl -LO https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
          unzip terraform_1.0.0_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

      - name: Generate README.md
        run: |
          echo "# Proyecto de API" > README.md
          echo "" >> README.md
          echo "Este proyecto contiene funciones automatizadas para gestionar la API." >> README.md
          echo "" >> README.md
          echo "## Diagrama de Infraestructura" >> README.md
          echo '```mermaid' >> README.md
          echo "graph TD;" >> README.md
          
          # Generar el diagrama a partir de archivos TF
          for file in $(find . -name "*.tf"); do
            # Aquí deberías llamar a una herramienta que analice los archivos TF y genere Mermaid
            # Por ejemplo, un script que lea los archivos TF y produzca las relaciones
            # Este es un ejemplo genérico; necesitarías personalizarlo
            echo "    $(basename $file) --> AWS" >> README.md
          done
          
          echo '```' >> README.md
          echo "" >> README.md
          echo "## Recursos Utilizados" >> README.md
          echo "- EC2" >> README.md
          echo "- MongoDB" >> README.md
          echo "- Grafana" >> README.md
          echo "- Aplicaciones Web y Móviles" >> README.md
          echo "- API Backend" >> README.md

      - name: Commit and Push README.md
        run: |
          git config --local user.name "jesus huallpa"
          git config --local user.email "jh2021071085@virtual.upt.pe"
          git add README.md
          git commit -m "Generar README.md automáticamente" || echo "No hay cambios para commit"
          git push origin DesarrolloApiBack

